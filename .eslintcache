[{"/home/rajdeep/Desktop/beingpm/project/client/src/index.js":"1","/home/rajdeep/Desktop/beingpm/project/client/src/App.js":"2","/home/rajdeep/Desktop/beingpm/project/client/src/components/Intro.js":"3","/home/rajdeep/Desktop/beingpm/project/client/src/components/Login.js":"4","/home/rajdeep/Desktop/beingpm/project/client/src/components/Register.js":"5","/home/rajdeep/Desktop/beingpm/project/client/src/components/Dashboard.js":"6","/home/rajdeep/Desktop/beingpm/project/client/src/components/Saved.js":"7","/home/rajdeep/Desktop/beingpm/project/client/src/components/Singlecontent.js":"8","/home/rajdeep/Desktop/beingpm/project/client/src/components/Navbar.js":"9","/home/rajdeep/Desktop/beingpm/project/client/src/components/Content.js":"10","/home/rajdeep/Desktop/beingpm/project/client/src/components/Profile.js":"11"},{"size":272,"mtime":1610529621961,"results":"12","hashOfConfig":"13"},{"size":2447,"mtime":1611445875896,"results":"14","hashOfConfig":"13"},{"size":795,"mtime":1610967437498,"results":"15","hashOfConfig":"13"},{"size":4286,"mtime":1611460347429,"results":"16","hashOfConfig":"13"},{"size":4408,"mtime":1611460325366,"results":"17","hashOfConfig":"13"},{"size":1955,"mtime":1611419753870,"results":"18","hashOfConfig":"13"},{"size":16205,"mtime":1611443983223,"results":"19","hashOfConfig":"13"},{"size":4199,"mtime":1611419753894,"results":"20","hashOfConfig":"13"},{"size":1671,"mtime":1611452301773,"results":"21","hashOfConfig":"13"},{"size":4446,"mtime":1611419753870,"results":"22","hashOfConfig":"13"},{"size":2997,"mtime":1611460379290,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"geh1us",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rajdeep/Desktop/beingpm/project/client/src/index.js",[],["49","50"],"/home/rajdeep/Desktop/beingpm/project/client/src/App.js",[],"/home/rajdeep/Desktop/beingpm/project/client/src/components/Intro.js",[],"/home/rajdeep/Desktop/beingpm/project/client/src/components/Login.js",[],"/home/rajdeep/Desktop/beingpm/project/client/src/components/Register.js",[],"/home/rajdeep/Desktop/beingpm/project/client/src/components/Dashboard.js",[],"/home/rajdeep/Desktop/beingpm/project/client/src/components/Saved.js",["51","52","53"],"/home/rajdeep/Desktop/beingpm/project/client/src/components/Singlecontent.js",["54"],"import React, {Fragment, useState, useEffect } from 'react';\nimport Content from \"./Content\"\n\n\nconst Singlecontent = (props) => {\n\n    // Now from dashboard we can pass what contents need to be displayed\n    // the rendering of content will be done in this section\n\n    const [contentData, setContentData] = useState([]);\n    const [bookmarkID, setBookmarkID] = useState([]);\n\n    async function getAllContent(){\n        try {\n            const response = await fetch(\"https://heypm-backend.herokuapp.com/getContent\",{\n                method: \"GET\",\n                headers: {token: localStorage.token}\n            });\n            const contentRes = await response.json();\n\n            //setContentData(contentRes);\n            try {\n                // to get content id bookmarked by the user today\n                const userid = props.userid;\n                const body = {userid};\n                const bookmarkIdResponse = await fetch(\"https://heypm-backend.herokuapp.com/getbookmarkID\", {\n                    method: \"POST\",\n                    headers:{\"Content-Type\": \"application/json\", token:localStorage.token},\n                    body: JSON.stringify(body)\n                });\n                const bookmarkIdRes =await bookmarkIdResponse.json();\n                setBookmarkID(bookmarkIdRes);\n                if (bookmarkID.length === 0) {\n                    setContentData(contentRes);\n                  } else {\n                    for (var i = 0; i < contentRes.length; i++) {\n                      let flag = false;\n                      for (var j = 0; j < bookmarkID.length; j++) {\n                        if (contentRes[i].content_id === bookmarkID[j].content_id) {\n                          flag = true;\n                          setContentData([ ...contentData, {\n                            isbookmarked: true,\n                            source_name: contentRes[i].source_name,\n                            content_type: contentRes[i].content_type,\n                            title: contentRes[i].title,\n                            content_link: contentRes[i].content_link,\n                            tags: contentRes[i].tags,\n                            content_body: contentRes[i].content_body,\n                            source_link: contentRes[i].source_link,\n                            content_id: contentRes[i].content_id\n                          }]);\n                          break;\n                        }\n                      }\n                      if (!flag) {\n                        setContentData([ ...contentData, {\n                          isbookmarked: false,\n                          source_name: contentRes[i].source_name,\n                          content_type: contentRes[i].content_type,\n                          title: contentRes[i].title,\n                          content_link: contentRes[i].content_link,\n                          tags: contentRes[i].tags,\n                          content_body: contentRes[i].content_body,\n                          source_link: contentRes[i].source_link,\n                          content_id: contentRes[i].content_id\n                        }]);\n                      }\n                    }\n                  }\n\n            } catch (err) {\n                //console.log(err.message);\n            }\n\n        } catch (err) {\n            //console.error(err.message);\n        }\n    }\n\n    useEffect(()=>{\n        getAllContent();\n    },[]);\n\n    return (\n        <Fragment>\n        {contentData.length === 3 &&\n        <div>\n          {contentData.map(content =>(\n            <Content\n              key = {content.content_id}\n              isbookmarked = {content.isbookmarked}\n              userid ={props.userid}\n              contentButtonName = {content.source_name}\n              contenttype = {content.content_type}\n              heading = {content.title}\n              contentlink = {content.content_link}\n              tag = {content.tags}\n              text = {content.content_body}\n              redirectlink = {content.source_link}\n              contentID = {content.content_id}\n              />\n          ))}\n        </div>\n      }\n        </Fragment>\n    );\n}\nexport default Singlecontent;\n","/home/rajdeep/Desktop/beingpm/project/client/src/components/Navbar.js",["55"],"/home/rajdeep/Desktop/beingpm/project/client/src/components/Content.js",["56","57"],"import React, {useState, useEffect } from 'react';\nimport './Content.css';\n//import ReactPlayer from 'react-player';\nimport { FaBookmark, FaRegBookmark } from 'react-icons/fa';\nimport { IoArrowForward } from 'react-icons/io5';\nimport { toast } from 'react-toastify';\n\ntoast.configure();\n\nconst Content = (props) => {\n\n    const [bookmark, setBookmark] = useState(false);\n    const [savedPage, setSavedPage] = useState(false);\n\n    const toggleSaved = async() => {\n\n        const userID= props.userid;\n        const contentID = props.contentID;\n        const body = {userID, contentID};\n\n        if (bookmark) {\n            try {\n\n                const response = await fetch(\"https://heypm-backend.herokuapp.com/removebookmarkContent\",{\n                    method: \"POST\",\n                    headers: {\"Content-Type\": \"application/json\", token: localStorage.token},\n                    body: JSON.stringify(body)\n                });\n                const contentRes = await response.json();\n                toast.error(contentRes,\n                  {autoClose:2000, position: toast.POSITION.BOTTOM_RIGHT});\n                setBookmark(false);\n                if (savedPage) {\n                    props.removeBookmarkContentChild(props.contentID);\n                  }\n\n            } catch (err) {\n              toast.error(err.message,\n                {autoClose:2000, position: toast.POSITION.BOTTOM_RIGHT});\n                //console.error(err.message);\n            }\n        }\n        else{\n            try {\n                const response = await fetch(\"https://heypm-backend.herokuapp.com/bookmarkContent\",{\n                    method: \"POST\",\n                    headers: {\"Content-Type\": \"application/json\", token: localStorage.token},\n                    body: JSON.stringify(body)\n                });\n                const contentRes = await response.json();\n                toast.success(contentRes,\n                  {autoClose:2000, position: toast.POSITION.BOTTOM_RIGHT});\n                setBookmark(true);\n\n            } catch (err) {\n                toast.error(err.message,\n                  {autoClose:2000, position: toast.POSITION.BOTTOM_RIGHT});\n                //console.error(err.message);\n            }\n        }\n    }\n\n    useEffect(()=>{\n        setBookmark(props.isbookmarked);\n        setSavedPage(props.isSavedPage);\n    },[]);\n\n    return (\n        <div className = \"content\">\n\n            <div className = \"heading\">\n                <h2>{props.heading}</h2>\n            </div>\n            {/* image div */}\n            <div>\n            {props.contenttype === \"Videos\" ?\n                (<div className = \"image\">\n                        <iframe\n                        title=\"No title set\"\n                        width=\"100%\"\n                        height=\"100%\"\n                        margin = \"auto\"\n                        display = \"block\"\n                        border-radius = \"20px\"\n                        src={props.contentlink}\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        >\n                        </iframe>\n                </div>) :\n                (<div className = \"image\">\n                    <img src = {props.contentlink} alt=\"\" />\n\n                    {/* https://www.youtube.com/embed/_Hp_dI0DzY4\" */}\n\n                    {/* <ReactPlayer\n                        width = '100%'\n                        height = '100%'\n                        url = ''/> */}\n                </div>)\n            }\n            </div>\n\n\n            <div className = \"tag-saved\">\n                <div className = \"tag\">\n                    <a > { props.tag } </a>\n                </div>\n                <div className = \"saved\" onClick = {toggleSaved}>\n                {bookmark === true ?  (<FaBookmark/>) : (<FaRegBookmark/>) }\n                </div>\n            </div>\n            <div className = \"text\">\n                <p> {props.text} </p>\n            </div>\n            <div  className=\"wrapper\">\n                <a href = {props.redirectlink} target=\"_blank\" rel=\"noreferrer\" >\n                    <button className = \"buttonlink\">{props.contentButtonName}\n                    <IoArrowForward className=\"button-arrow-icon\"/> </button>\n                </a>\n            </div>\n        </div>\n    );\n}\nexport default Content;\n","/home/rajdeep/Desktop/beingpm/project/client/src/components/Profile.js",["58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":28,"column":10,"nodeType":"65","messageId":"66","endLine":28,"endColumn":18},{"ruleId":"63","severity":1,"message":"67","line":73,"column":9,"nodeType":"65","messageId":"66","endLine":73,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":135,"column":5,"nodeType":"70","endLine":135,"endColumn":18,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":82,"column":7,"nodeType":"70","endLine":82,"endColumn":9,"suggestions":"73"},{"ruleId":"63","severity":1,"message":"74","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"75","line":66,"column":7,"nodeType":"70","endLine":66,"endColumn":9,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":108,"column":21,"nodeType":"79","endLine":108,"endColumn":25},{"ruleId":"63","severity":1,"message":"80","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":14},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'clickAll' is assigned a value but never used.","Identifier","unusedVar","'empVideoFilter' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSavedContent'. Either include it or remove the dependency array.","ArrayExpression",["83"],"React Hook useEffect has a missing dependency: 'getAllContent'. Either include it or remove the dependency array.",["84"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'props.isSavedPage' and 'props.isbookmarked'. Either include them or remove the dependency array. If 'setBookmark' needs the current value of 'props.isbookmarked', you can also switch to useReducer instead of useState and read 'props.isbookmarked' in the reducer.",["85"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Styles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [getSavedContent, removeSaved]",{"range":"92","text":"93"},"Update the dependencies array to be: [getAllContent]",{"range":"94","text":"95"},"Update the dependencies array to be: [props.isSavedPage, props.isbookmarked]",{"range":"96","text":"97"},[3627,3640],"[getSavedContent, removeSaved]",[3432,3434],"[getAllContent]",[2352,2354],"[props.isSavedPage, props.isbookmarked]"]